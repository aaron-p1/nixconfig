diff --git a/nixos-rebuild.sh b/nixos-rebuild.sh
index 1868f6b..47b89f2 100755
--- a/nixos-rebuild.sh
+++ b/nixos-rebuild.sh
@@ -233,7 +233,7 @@ nixBuild() {
     logVerbose "Building in legacy (non-flake) mode."
     if [ -z "$buildHost" ]; then
         logVerbose "No --build-host given, running nix-build locally"
-        runCmd nix-build "$@"
+        runCmd nom-build "$@"
     else
         logVerbose "buildHost set to \"$buildHost\", running nix-build remotely"
         local instArgs=()
@@ -281,10 +281,10 @@ nixFlakeBuild() {
     logVerbose "Building in flake mode."
     if [[ -z "$buildHost" && -z "$targetHost" && "$action" != switch && "$action" != boot && "$action" != test && "$action" != dry-activate ]]
     then
-        runCmd nix "${flakeFlags[@]}" build "$@"
+        runCmd nom build "${flakeFlags[@]}" "$@"
         readlink -f ./result
     elif [ -z "$buildHost" ]; then
-        runCmd nix "${flakeFlags[@]}" build "$@" --out-link "${tmpDir}/result"
+        runCmd nom build "${flakeFlags[@]}" "$@" --out-link "${tmpDir}/result"
         readlink -f "${tmpDir}/result"
     else
         local attr="$1"
@@ -423,11 +423,11 @@ trap cleanup EXIT
 # Re-execute nixos-rebuild from the Nixpkgs tree.
 if [[ -z $_NIXOS_REBUILD_REEXEC && -n $canRun && -z $fast ]]; then
     if [[ -z $flake ]]; then
-        if p=$(runCmd nix-build --no-out-link --expr 'with import <nixpkgs/nixos> {}; config.system.build.nixos-rebuild' "${extraBuildFlags[@]}"); then
+        if p=$(runCmd nom-build --no-out-link --expr 'with import <nixpkgs/nixos> {}; config.system.build.nom-rebuild' "${extraBuildFlags[@]}"); then
             SHOULD_REEXEC=1
         fi
     else
-        runCmd nix "${flakeFlags[@]}" build --out-link "${tmpDir}/nixos-rebuild" "$flake#$flakeAttr.config.system.build.nixos-rebuild" "${extraBuildFlags[@]}" "${lockFlags[@]}"
+        runCmd nom build "${flakeFlags[@]}" --out-link "${tmpDir}/nixos-rebuild" "$flake#$flakeAttr.config.system.build.nom-rebuild" "${extraBuildFlags[@]}" "${lockFlags[@]}"
         if p=$(readlink -e "${tmpDir}/nixos-rebuild"); then
             SHOULD_REEXEC=1
         fi
@@ -437,7 +437,7 @@ if [[ -z $_NIXOS_REBUILD_REEXEC && -n $canRun && -z $fast ]]; then
         export _NIXOS_REBUILD_REEXEC=1
         # Manually call cleanup as the EXIT trap is not triggered when using exec
         cleanup
-        runCmd exec "$p/bin/nixos-rebuild" "${origArgs[@]}"
+        runCmd exec "$p/bin/nom-rebuild" "${origArgs[@]}"
         exit 1
     fi
 fi
