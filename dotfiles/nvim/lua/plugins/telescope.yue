export config = ->
  import "telescope" as t
  import "trouble.providers.telescope" as trouble
  import "telescope.themes" as tt
  import "telescope.builtin" as tb
  import "helper"

  t.setup({
    defaults:
      mappings:
        i:
          "<leader>ot": trouble.open_with_trouble
        n:
          "<leader>ot": trouble.open_with_trouble
      preview:
        filesize_limit: 1 -- 1 MB
    extensions:
      fzf:
        fuzzy: true
        override_generic_sorter: true
        override_file_sorter: true
        case_mode: "smart_case"
  })

  t.load_extension("fzf")

  -- file
  vim.keymap.set("n", "<Leader>fa",
    (-> tb.find_files({
      find_command:
        * "fd"
        * "--type=file"
        * "--size=-1M"
        * "--hidden"
        * "--strip-cwd-prefix"
        * "--no-ignore"
    })), desc: "All files")
  vim.keymap.set("n", "<Leader>ff",
    (-> tb.find_files({
      find_command:
        * "fd"
        * "--type=file"
        * "--size=-1M"
        * "--hidden"
        * "--strip-cwd-prefix"
        * "--exclude=.git"
    })), desc: "Files")
  vim.keymap.set("n", "<Leader>fr", tb.live_grep, desc: "Live grep")
  vim.keymap.set("n", "<Leader>ft", tb.grep_string, desc: "Grep string")
  -- vim
  vim.keymap.set("n", "<Leader>fb", tb.buffers, desc: "Buffers")
  vim.keymap.set("n", "<Leader>fm", tb.marks, desc: "Marks")
  vim.keymap.set("n", "<Leader>fcr", tb.current_buffer_fuzzy_find, desc: "Fuzzy find")
  -- lsp
  vim.keymap.set("n", "<Leader>flr", tb.lsp_references, desc: "References")
  vim.keymap.set("n", "<Leader>fls", tb.lsp_document_symbols, desc: "Document symbols")
  vim.keymap.set("n", "<Leader>fli", tb.lsp_implementations, desc: "Implementations")
  vim.keymap.set("n", "<Leader>fld", tb.lsp_definitions, desc: "Definitions")
  -- git
  vim.keymap.set("n", "<Leader>fgc", tb.git_commits, desc: "Commits")
  vim.keymap.set("n", "<Leader>fgb", tb.git_bcommits, desc: "BCommits")
  vim.keymap.set("n", "<Leader>fgt", tb.git_stash, desc: "Stash")

  --symbols
  vim.keymap.set("n", "<Leader>fs", tb.symbols, desc: "Symbols")

  helper.registerPluginWk({
    prefix: "<leader>"
    map:
      f:
        name: "Telescope"
        c:
          name: "Current Buffer"
        l:
          name: "LSP"
        g:
          name: "Git"
  })
