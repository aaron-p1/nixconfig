load_common = ->
  import "luasnip" as ls
  import "fun"

  group_assignments =
    all:
      * "all"
    json:
      * "json"
    php:
      * "php"
      * "c_like"
      * "laravel"
    blade:
      * "blade"
      * "html"
    html:
      * "html"
      * "javascript"
      * "c_like"
    javascript:
      * "javascript"
      * "c_like"
    typescript:
      * "typescript"
      * "c_like"
    vue:
      * "html"
      * "javascript"
      * "c_like"

  snippet_groups = fun.iter(group_assignments)
    ::foldl(((acc, k, v) -> fun.chain(acc, v)), {})
    ::map((v) -> v, require("plugins.luasnip.snippets.common.#{v}"))
    ::tomap()

  group_assignments.typescriptreact = group_assignments.typescript

  snippets = fun.iter(group_assignments)
    ::map((ft, groups) ->
      return ft, fun.iter(groups)
          ::map((group) -> snippet_groups[group])
          ::foldl(((acc, val) -> fun.chain(acc, val)), {})
          ::totable())
    ::tomap()

  ls.add_snippets(nil, snippets, key: "all")


snippet_dir = "lua/plugins/luasnip/snippets"

get_snippet_files = (subdir) ->
  path = "#{vim.fn.stdpath("config")}/#{snippet_dir}/#{subdir}"

  return vim.fn.readdir(path, (p) -> p::match("[.]lua") and 1 or 0)


load_file_templates = ->
  import "luasnip" as ls
  import "fun"

  snippets = fun.iter(get_snippet_files("file-templates"))
    ::map((f) -> vim.fn.fnamemodify(f, ":r"))
    ::map((s) ->
      return s, require("plugins.luasnip.snippets.file-templates.#{s}"))
    ::tomap()

  ls.add_snippets(nil, snippets, key: "file-templates")


export load_snippets = ->
  load_common()
  load_file_templates()
