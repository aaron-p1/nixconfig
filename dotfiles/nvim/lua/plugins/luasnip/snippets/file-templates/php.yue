import "fun"
import "helper" as {
  :endsWith
  :startsWith
}

import "plugins.luasnip.snippets.utils" as {
  :s
  :sn
  :i
  :t
  :d
  :fmta

  :readTemplateFile
  :oFileStart
}

getNamespaceFromPath = ->
  path = vim.fn.expand("%:h")

  return nil if path == "."

  return fun.iter(vim.fn.split(path, "/"))
    ::map((dir) -> dir::gsub("^%l", string.upper))
    ::foldl((acc, v) -> if acc == nil then v else "#{acc}\\#{v}", nil)

getNamespaceFromFile = ->
  path = vim.fn.expand("%:h")
  filename = vim.fn.expand("%:t")

  file_to_read = fun.iter(vim.fn.readdir(path))
    ::filter((file) -> endsWith(file, ".php") and file ~= filename)
    ::nth(1)

  return nil if file_to_read == nil

  for line in *vim.fn.readfile("#{path}/#{file_to_read}", "", 5)
    return line::match("%w+ (.+);") if startsWith(line, "namespace")
  return nil

getNamespaceLine = (namespace) ->
  sn(nil, {t({"", "namespace "}), i(1, namespace), t({";", ""})})

getNamespace = ->
  result = getNamespaceFromFile()
  result = getNamespaceFromPath() if result == nil

  return if result == nil then sn(nil, t("")) else getNamespaceLine(result)

getClassName = -> sn(nil, i(1, vim.fn.expand("%:t:r")))

export default {
  s(
    "initclass",
    fmta(readTemplateFile("php-class.php"), {
      d(1, getNamespace, {}),
      d(2, getClassName, {}),
      i(3),
      i(0),
    }),
    oFileStart
  ),
}
