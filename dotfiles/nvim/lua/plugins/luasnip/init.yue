export config = ->
  import "luasnip" as ls
  import "fun"
  import "helper"
  import "luasnip.util.types" as types
  import "plugins.luasnip.snippets" as sn

  vim.keymap.set("n", "<leader>rpls", (->
    package.loaded["plugins.luasnip"] = nil

    fun.iter(package.loaded)
      ::map((k, _) -> k)
      ::filter((k) -> k::find("^plugins[.]luasnip[.]") ~= nil)
      ::each((k) -> package.loaded[k] = nil)

    import "plugins.luasnip" as pls
    pls.config()), desc: "Luasnip"
  )

  vim.keymap.set("i", "<C-K>", ls.expand, desc: "Expand")
  vim.keymap.set({"i", "s"}, "<C-J>", (-> ls.jump(-1)), desc: "Prev")
  vim.keymap.set({"i", "s"}, "<C-L>", (-> ls.jump(1)), desc: "Next")

  vim.keymap.set("n", "<leader>i", ls.unlink_current, desc: "Unlink snip")

  vim.keymap.set({"i", "s"}, "<C-E>",
    -> if ls.choice_active() then "<Plug>luasnip-next-choice" else "<C-E>",
    {expr: true, remap: true, desc: "Next choice"})

  helper.registerPluginWk({
    prefix: "<leader>"
    map:
      r:
        name: "Reload"
        p:
          name: "Plugin"
          l:
            name: "L"
  })

  ls.config.set_config({
    updateevents: "TextChanged,TextChangedI"
    region_check_events: "InsertEnter"
    ext_opts:
      [types.choiceNode]:
        active:
          virt_text: {{"●", "GruvboxOrange"}}
      [types.insertNode]:
        active:
          virt_text: {{"●", "GruvboxBlue"}}
  })

  sn.load_snippets()
